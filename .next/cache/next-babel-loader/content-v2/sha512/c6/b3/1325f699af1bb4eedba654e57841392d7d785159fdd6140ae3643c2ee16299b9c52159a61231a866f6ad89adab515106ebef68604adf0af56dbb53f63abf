{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/intervest/Intervest_projects/React_training/udemy_course/nextjs-2/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/intervest/Intervest_projects/React_training/udemy_course/nextjs-2/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,QAAC,YAAD;AACE,MAAA,KAAK,EAAGA,KAAK,CAACC,UAAN,CAAiBC,KAD3B;AAEE,MAAA,KAAK,EAAGF,KAAK,CAACC,UAAN,CAAiBE,KAF3B;AAGE,MAAA,OAAO,EAAGH,KAAK,CAACC,UAAN,CAAiBG,OAH7B;AAIE,MAAA,WAAW,EAAGJ,KAAK,CAACC,UAAN,CAAiBI;AAJjC;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQN,a;;AAoET,eAAeA,aAAf","sourcesContent":["import { MongoClient,ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head></Head>\n    <MeetupDetail\n      image={ props.meetupData.image}\n      title={ props.meetupData.title}\n      address={ props.meetupData.address}\n      description={ props.meetupData.description}\n      />\n      </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://new_user:Welcome2023@cluster0.swbqxie.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://new_user:Welcome2023@cluster0.swbqxie.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id:new ObjectId(meetupId) });\n\n  client.close();\n\n\n\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description:selectedMeetup.description\n      }\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}